openapi: 3.0.0
paths:
  /categories:
    get:
      operationId: CategoryController_read_categories
      parameters: []
      responses:
        '200':
          description: '카테고리 목록을 성공적으로 조회했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/NestedCategoryDTO'}, {example: {id: 5, name: 소파, slug: sofa, description: '다양한 스타일의 소파', level: 3, image_url: 'https://example.com/categories/sofa.jpg', children: '중첩 카테고리 목록'}}]}}}
        '400':
          description: '카테고리 목록 조회에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '카테고리 목록 조회에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '카테고리 목록 조회'
      tags:
        - 카테고리
  '/categories/{id}/products':
    get:
      operationId: CategoryController_read_products
      parameters:
        -
          name: id
          required: true
          in: path
          description: '고유 식별자'
          schema:
            example: '123'
            type: number
        -
          name: page
          required: false
          in: query
          description: '페이지 번호'
          schema:
            example: 1
            type: number
        -
          name: perPage
          required: false
          in: query
          description: '페이지당 아이템 수'
          schema:
            example: 10
            type: number
        -
          name: sort
          required: false
          in: query
          description: '정렬 기준. 형식: {필드}:{asc|desc}'
          schema:
            example: 'created_at:desc'
            type: string
        -
          name: includeSubcategories
          required: false
          in: query
          description: '하위 카테고리 포함 여부'
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: '특정 카테고리의 상품 목록을 성공적으로 조회했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/CategoryResponseBundleDTO'}, {example: {category: {id: 5, name: 소파, slug: sofa, description: '다양한 스타일의 소파', level: 3, image_url: 'https://example.com/categories/sofa.jpg', parent: {id: 2, name: '거실 가구', slug: living-room}}, items: {id: 123, name: '슈퍼 편안한 소파', slug: super-comfortable-sofa, short_description: '최고급 소재로 만든 편안한 소파', status: ACTIVE, created_at: '2025-04-10T09:30:00Z', base_price: 599000, sale_price: 499000, currency: KRW, primary_image: {url: 'https://example.com/images/sofa3.jpg', alt_text: '네이비 소파 측면'}, brand: {id: 1, name: 편안가구}, seller: {id: 1, name: 홈퍼니처}, in_stock: true, rating: 4.7, review_count: 128}, pagination: {total_items: 50, total_pages: 5, current_page: 1, per_page: 10}}}]}}}
        '400':
          description: '특정 카테고리의 상품 목록 조회에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '특정 카테고리의 상품 목록 조회에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '특정 카테고리의 상품 목록 조회'
      tags:
        - 카테고리
  /main:
    get:
      operationId: MainController_read_main_products
      parameters: []
      responses:
        '200':
          description: '메인 페이지 상품 목록을 성공적으로 조회했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/MainResponseBundleDTO'}, {example: {new_products: {id: 123, name: '슈퍼 편안한 소파', slug: super-comfortable-sofa, short_description: '최고급 소재로 만든 편안한 소파', status: ACTIVE, created_at: '2025-04-10T09:30:00Z', base_price: 599000, sale_price: 499000, currency: KRW, primary_image: {url: 'https://example.com/images/sofa3.jpg', alt_text: '네이비 소파 측면'}, brand: {id: 1, name: 편안가구}, seller: {id: 1, name: 홈퍼니처}, in_stock: true, rating: 4.7, review_count: 128}, popular_products: {id: 123, name: '슈퍼 편안한 소파', slug: super-comfortable-sofa, short_description: '최고급 소재로 만든 편안한 소파', status: ACTIVE, created_at: '2025-04-10T09:30:00Z', base_price: 599000, sale_price: 499000, currency: KRW, primary_image: {url: 'https://example.com/images/sofa3.jpg', alt_text: '네이비 소파 측면'}, brand: {id: 1, name: 편안가구}, seller: {id: 1, name: 홈퍼니처}, in_stock: true, rating: 4.7, review_count: 128}, featured_categories: {id: 5, name: 소파, slug: sofa, image_url: 'https://example.com/categories/sofa.jpg', product_count: 85}}}]}}}
        '400':
          description: '입력 데이터가 유효하지 않습니다..'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '입력 데이터가 유효하지 않습니다..', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      summary: '메인 페이지용 상품 목록'
      tags:
        - 메인
  /products:
    post:
      operationId: ProductController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBodyDTO'
      responses:
        '201':
          description: '상품이 성공적으로 등록되었습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ProductResponseDTO'}, {example: {id: 123, name: '슈퍼 편안한 소파', slug: super-comfortable-sofa, created_at: '2025-04-10T09:30:00Z', updated_at: '2025-04-14T10:15:00Z'}}]}}}
        '400':
          description: '상품 등록에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 등록에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 등록'
      tags:
        - '상품 관리'
    get:
      operationId: ProductController_read_all
      parameters:
        -
          name: page
          required: false
          in: query
          description: '페이지 번호 (기본값: 1)'
          schema:
            example: 1
            type: number
        -
          name: perPage
          required: false
          in: query
          description: '페이지당 아이템 수 (기본값: 10)'
          schema:
            example: 10
            type: number
        -
          name: sort
          required: false
          in: query
          description: '정렬 기준. 형식: {필드}:{asc|desc}. 여러 개인 경우 콤마로 구분 (기본값: created_at:desc)'
          schema:
            example: 'created_at:desc'
            type: string
        -
          name: status
          required: false
          in: query
          description: '상품 상태 필터 (ACTIVE, OUT_OF_STOCK, DELETED)'
          schema:
            example: ACTIVE
            type: string
        -
          name: minPrice
          required: false
          in: query
          description: '최소 가격 필터'
          schema:
            example: 10000
            type: number
        -
          name: maxPrice
          required: false
          in: query
          description: '최대 가격 필터'
          schema:
            example: 100000
            type: number
        -
          name: category
          required: false
          in: query
          description: '카테고리 ID 필터 (여러 개인 경우 콤마로 구분)'
          schema:
            example:
              - 5
            type: array
            items:
              type: number
        -
          name: seller
          required: false
          in: query
          description: '판매자 ID 필터'
          schema:
            example: 1
            type: number
        -
          name: brand
          required: false
          in: query
          description: '브랜드 ID 필터'
          schema:
            example: 2
            type: number
        -
          name: inStock
          required: false
          in: query
          description: '재고 유무 필터'
          schema:
            example: true
            type: boolean
        -
          name: search
          required: false
          in: query
          description: 검색어
          schema:
            example: 소파
            type: string
      responses:
        '200':
          description: '상품 목록을 성공적으로 조회했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ProductResponseBundleDTO'}, {example: {items: {id: 123, name: '슈퍼 편안한 소파', slug: super-comfortable-sofa, short_description: '최고급 소재로 만든 편안한 소파', status: ACTIVE, created_at: '2025-04-10T09:30:00Z', base_price: 599000, sale_price: 499000, currency: KRW, primary_image: {url: 'https://example.com/images/sofa3.jpg', alt_text: '네이비 소파 측면'}, brand: {id: 1, name: 편안가구}, seller: {id: 1, name: 홈퍼니처}, in_stock: true, rating: 4.7, review_count: 128}, pagination: {total_items: 50, total_pages: 5, current_page: 1, per_page: 10}}}]}}}
        '400':
          description: '상품 목록 조회에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 목록 조회에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 목록 조회'
      tags:
        - '상품 관리'
  '/products/{id}':
    get:
      operationId: ProductController_read
      parameters:
        -
          name: id
          required: true
          in: path
          description: '고유 식별자'
          schema:
            example: '123'
            type: number
      responses:
        '200':
          description: '상품 상세 정보를 성공적으로 조회했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ProductCatalogDTO'}, {example: {id: 123, name: '슈퍼 편안한 소파', slug: super-comfortable-sofa, short_description: '최고급 소재로 만든 편안한 소파', full_description: '<p>이 소파는 최고급 소재로 제작되었으며...</p>', status: ACTIVE, created_at: '2025-04-10T09:30:00Z', updated_at: '2025-04-14T10:15:00Z', seller: {id: 1, name: 홈퍼니처, description: '최고의 가구 전문 판매점', logo_url: 'https://example.com/sellers/homefurniture.png', rating: 4.8, contact_email: contact@homefurniture.com, contact_phone: 02-1234-5678}, brand: {id: 1, name: 편안가구, description: '편안함을 추구하는 가구 브랜드', logo_url: 'https://example.com/brands/comfortfurniture.png', website: 'https://comfortfurniture.com'}, detail: {weight: 25.5, dimensions: {width: 200, height: 85, depth: 90}, materials: '가죽, 목재, 폼', country_of_origin: 대한민국, warranty_info: '2년 품질 보증', care_instructions: '마른 천으로 표면을 닦아주세요', additional_info: {assembly_required: true, assembly_time: 30분}}, price: {base_price: 599000, sale_price: 499000, cost_price: 350000, currency: KRW, tax_rate: 10, discount_percentage: 17}, categories: {id: 5, name: 소파, slug: sofa, is_primary: true, description: '다양한 스타일의 소파', level: 3, image_url: 'https://example.com/categories/sofa.jpg', parent: {id: 2, name: '거실 가구', slug: living-room}}, option_groups: {id: 1, name: 색상, display_order: 1, options: {id: 1, option_group_id: 35, name: 브라운, additional_price: 25000, sku: SOFA-BRN, stock: 10, display_order: 1}}, images: {id: 1, url: 'https://example.com/images/sofa3.jpg', alt_text: '네이비 소파 측면', is_primary: false, display_order: 3, option_id: 35}, tags: {id: 1, name: 편안함, slug: comfort}, rating: {average: 4.5, count: 150, distribution: {'1': 2, '2': 3, '3': 15, '4': 30, '5': 100}}}}]}}}
        '400':
          description: '요청한 상품을 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '요청한 상품을 찾을 수 없습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 상세 조회'
      tags:
        - '상품 관리'
    put:
      operationId: ProductController_update
      parameters:
        -
          name: id
          required: true
          in: path
          description: '고유 식별자'
          schema:
            example: '123'
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBodyDTO'
      responses:
        '200':
          description: '상품이 성공적으로 수정되었습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ProductResponseDTO'}, {example: {id: 123, name: '슈퍼 편안한 소파', slug: super-comfortable-sofa, created_at: '2025-04-10T09:30:00Z', updated_at: '2025-04-14T10:15:00Z'}}]}}}
        '400':
          description: '상품 수정에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 수정에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 수정'
      tags:
        - '상품 관리'
    delete:
      operationId: ProductController_delete
      parameters:
        -
          name: id
          required: true
          in: path
          description: '고유 식별자'
          schema:
            example: '123'
            type: number
      responses:
        '200':
          description: '상품이 성공적으로 삭제되었습니다.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '400':
          description: '상품 삭제에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 삭제에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 삭제'
      tags:
        - '상품 관리'
  '/products/{id}/options':
    post:
      operationId: ProductOptionsController_create_option
      parameters:
        -
          name: id
          required: true
          in: path
          description: '상품 ID'
          schema:
            example: '123'
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductOptionDTO'
      responses:
        '201':
          description: '상품 옵션이 성공적으로 추가되었습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ProductOptionDTO'}, {example: {id: 1, option_group_id: 35, name: 브라운, additional_price: 25000, sku: SOFA-BRN, stock: 10, display_order: 1}}]}}}
        '400':
          description: '상품 옵션 추가에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 옵션 추가에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 옵션 추가'
      tags:
        - '상품 옵션 관리'
  '/products/{id}/options/{optionId}':
    put:
      operationId: ProductOptionsController_update_option
      parameters:
        -
          name: id
          required: true
          in: path
          description: '상품 ID'
          schema:
            example: '123'
            type: number
        -
          name: optionId
          required: true
          in: path
          description: '옵션 ID'
          schema:
            example: '456'
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductOptionDTO'
      responses:
        '200':
          description: '상품 옵션이 성공적으로 수정되었습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ProductOptionDTO'}, {example: {id: 1, option_group_id: 35, name: 브라운, additional_price: 25000, sku: SOFA-BRN, stock: 10, display_order: 1}}]}}}
        '400':
          description: '상품 옵션 수정에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 옵션 수정에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 옵션 수정'
      tags:
        - '상품 옵션 관리'
    delete:
      operationId: ProductOptionsController_delete_option
      parameters:
        -
          name: id
          required: true
          in: path
          description: '상품 ID'
          schema:
            example: '123'
            type: number
        -
          name: optionId
          required: true
          in: path
          description: '옵션 ID'
          schema:
            example: '456'
            type: number
      responses:
        '200':
          description: '상품 옵션이 성공적으로 삭제되었습니다.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '400':
          description: '상품 옵션 삭제에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 옵션 삭제에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 옵션 삭제'
      tags:
        - '상품 옵션 관리'
  '/products/{id}/images':
    post:
      operationId: ProductOptionsController_create_image
      parameters:
        -
          name: id
          required: true
          in: path
          description: '상품 ID'
          schema:
            example: '123'
            type: number
        -
          name: optionId
          required: true
          in: path
          description: '옵션에 대한 식별자'
          schema:
            example: '456'
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageDTO'
      responses:
        '201':
          description: '상품 이미지가 성공적으로 추가되었습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ImageDTO'}, {example: {id: 1, url: 'https://example.com/images/sofa3.jpg', alt_text: '네이비 소파 측면', is_primary: false, display_order: 3, option_id: 35}}]}}}
        '400':
          description: '상품 이미지 추가에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 이미지 추가에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 이미지 추가'
      tags:
        - '상품 옵션 관리'
  '/products/{id}/reviews':
    get:
      operationId: ReviewController_read
      parameters:
        -
          name: id
          required: true
          in: path
          description: '고유 식별자'
          schema:
            example: '123'
            type: number
        -
          name: page
          required: false
          in: query
          description: '페이지 번호'
          schema:
            example: 1
            type: number
        -
          name: perPage
          required: false
          in: query
          description: '페이지당 아이템 수'
          schema:
            example: 10
            type: number
        -
          name: sort
          required: false
          in: query
          description: '정렬 기준. 형식: {필드}:{asc|desc}'
          schema:
            example: 'created_at:desc'
            type: string
        -
          name: rating
          required: false
          in: query
          description: '평점 필터 (1-5)'
          schema:
            example: 4
            type: number
      responses:
        '200':
          description: '상품 리뷰를 성공적으로 조회했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ReviewResponseBundleDTO'}, {example: {items: {id: 1500, user: {id: 250, name: 홍길동, avatar_url: 'https://example.com/avatars/user250.jpg'}, rating: 5, title: '완벽한 소파입니다!', content: '배송도 빠르고 품질도 매우 좋습니다. 색상도 사진과 동일하고 조립도 쉬웠어요.', created_at: '2025-04-12T15:30:00Z', updated_at: '2025-04-12T15:30:00Z', verified_purchase: true, helpful_votes: 12}, summary: {average_rating: 4.5, total_count: 100, distribution: {'1': 10, '2': 20, '3': 30, '4': 25, '5': 15}}, pagination: {total_items: 50, total_pages: 5, current_page: 1, per_page: 10}}}]}}}
        '400':
          description: '상품 리뷰 조회에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '상품 리뷰 조회에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '상품 리뷰 조회'
      tags:
        - 리뷰
    post:
      operationId: ReviewController_create
      parameters:
        -
          name: id
          required: true
          in: path
          description: '고유 식별자'
          schema:
            example: '123'
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewBodyDTO'
      responses:
        '201':
          description: '리뷰가 성공적으로 작성되었습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ReviewDTO'}, {example: {id: 1500, user: {id: 250, name: 홍길동, avatar_url: 'https://example.com/avatars/user250.jpg'}, rating: 5, title: '완벽한 소파입니다!', content: '배송도 빠르고 품질도 매우 좋습니다. 색상도 사진과 동일하고 조립도 쉬웠어요.', created_at: '2025-04-12T15:30:00Z', updated_at: '2025-04-12T15:30:00Z', verified_purchase: true, helpful_votes: 12}}]}}}
        '400':
          description: '리뷰 작성에 실패했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '리뷰 작성에 실패했습니다.', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '해당 작업을 수행할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '해당 작업을 수행할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '리뷰 작성'
      tags:
        - 리뷰
  '/reviews/{id}':
    put:
      operationId: ReviewController_update
      parameters:
        -
          name: id
          required: true
          in: path
          description: '고유 식별자'
          schema:
            example: '123'
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewBodyDTO'
      responses:
        '200':
          description: '리뷰가 성공적으로 수정되었습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ResponseDTO'}
                  - {properties: {data: {allOf: [{$ref: '#/components/schemas/ReviewResponseDTO'}, {example: {id: 1500, rating: 5, title: '완벽한 소파입니다!', content: '배송도 빠르고 품질도 매우 좋습니다. 색상도 사진과 동일하고 조립도 쉬웠어요.', updated_at: '2025-04-12T15:30:00Z'}}]}}}
        '400':
          description: '입력 데이터가 유효하지 않습니다..'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '입력 데이터가 유효하지 않습니다..', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '다른 사용자의 리뷰를 수정할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '다른 사용자의 리뷰를 수정할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '리뷰 수정'
      tags:
        - 리뷰
    delete:
      operationId: ReviewController_delete
      parameters:
        -
          name: id
          required: true
          in: path
          description: '고유 식별자'
          schema:
            example: '123'
            type: number
      responses:
        '200':
          description: '리뷰가 성공적으로 삭제되었습니다.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
        '400':
          description: '입력 데이터가 유효하지 않습니다..'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INVALID_INPUT, message: '입력 데이터가 유효하지 않습니다..', details: {}}}}
        '401':
          description: '인증이 필요합니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: UNAUTHORIZED, message: '인증이 필요합니다.', details: {}}}}
        '403':
          description: '다른 사용자의 리뷰를 삭제할 권한이 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: FORBIDDEN, message: '다른 사용자의 리뷰를 삭제할 권한이 없습니다.', details: {}}}}
        '404':
          description: '요청한 리소스를 찾을 수 없습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: RESOURCE_NOT_FOUND, message: '요청한 리소스를 찾을 수 없습니다.', details: {}}}}
        '409':
          description: '리소스 충돌이 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: CONFLICT, message: '리소스 충돌이 발생했습니다.', details: {}}}}
        '500':
          description: '서버 내부 오류가 발생했습니다.'
          content:
            application/json:
              schema:
                allOf:
                  - {$ref: '#/components/schemas/ErrorDTO'}
                  - {example: {success: false, error: {code: INTERNAL_ERROR, message: '서버 내부 오류가 발생했습니다.', details: {}}}}
      security:
        -
          bearer: []
      summary: '리뷰 삭제'
      tags:
        - 리뷰
info:
  title: 'API 명세서'
  description: 'CQRS 시스템 설계/구축 챌린지 - API 명세서'
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    ErrorDetails:
      type: object
      properties: {}
    ErrorObject:
      type: object
      properties:
        code:
          type: string
          description: '에러 발생 시 응답은 다음 형식을 따릅니다'
          enum:
            - INVALID_INPUT
            - RESOURCE_NOT_FOUND
            - UNAUTHORIZED
            - FORBIDDEN
            - NOT_FOUND
            - CONFLICT
            - INTERNAL_ERROR
        message:
          type: string
          description: '에러 메시지'
          example: '에러가 발생했습니다.'
        details:
          description: '추가적인 에러 세부 정보 (선택 사항)'
          allOf:
            -
              $ref: '#/components/schemas/ErrorDetails'
      required:
        - code
        - message
    ErrorDTO:
      type: object
      properties:
        success:
          type: boolean
          description: '요청 성공 여부'
          example: false
        error:
          description: '공통 에러 코드'
          allOf:
            -
              $ref: '#/components/schemas/ErrorObject'
      required:
        - success
        - error
    ResponseDTO:
      type: object
      properties:
        success:
          type: boolean
          description: '요청 성공 여부'
          example: true
        data:
          type: object
          description: '응답 데이터'
          example: {}
        message:
          type: string
          description: '응답 메시지'
          example: '요청이 성공적으로 처리되었습니다.'
      required:
        - success
        - data
    NestedCategoryDTO:
      type: object
      properties:
        id:
          type: number
          description: '카테고리 ID'
          example: 5
        name:
          type: string
          description: '카테고리 이름'
          example: 소파
        slug:
          type: string
          description: '카테고리 슬러그'
          example: sofa
        description:
          type: string
          description: '카테고리 설명'
          example: '다양한 스타일의 소파'
        level:
          type: number
          description: '카테고리 레벨'
          example: 3
        image_url:
          type: string
          description: '카테고리 이미지 URL'
          example: 'https://example.com/categories/sofa.jpg'
        children:
          type: array
          description: '중첩 카테고리 목록'
          items:
            $ref: '#/components/schemas/NestedCategoryDTO'
      required:
        - id
        - name
        - slug
        - description
        - level
        - image_url
    ParentCategoryDTO:
      type: object
      properties:
        id:
          type: number
          description: '카테고리 ID'
          example: 2
        name:
          type: string
          description: '카테고리 이름'
          example: '거실 가구'
        slug:
          type: string
          description: '카테고리 슬러그'
          example: living-room
      required:
        - id
        - name
        - slug
    CategoryResponseDTO:
      type: object
      properties:
        id:
          type: number
          description: '카테고리 ID'
          example: 5
        name:
          type: string
          description: '카테고리 이름'
          example: 소파
        slug:
          type: string
          description: '카테고리 슬러그'
          example: sofa
        description:
          type: string
          description: '카테고리 설명'
          example: '다양한 스타일의 소파'
        level:
          type: number
          description: '카테고리 레벨'
          example: 3
        image_url:
          type: string
          description: '카테고리 이미지 URL'
          example: 'https://example.com/categories/sofa.jpg'
        parent:
          description: '부모 카테고리'
          nullable: true
          allOf:
            -
              $ref: '#/components/schemas/ParentCategoryDTO'
      required:
        - id
        - name
        - slug
        - description
        - level
        - image_url
    ProductSummaryOfImageDTO:
      type: object
      properties:
        url:
          type: string
          description: '이미지 URL'
          example: 'https://example.com/images/sofa3.jpg'
        alt_text:
          type: string
          description: '이미지 대체 텍스트'
          example: '네이비 소파 측면'
      required:
        - url
        - alt_text
    ProductSummaryOfBrandDTO:
      type: object
      properties:
        id:
          type: number
          description: '브랜드 ID'
          example: 1
        name:
          type: string
          description: '브랜드 이름'
          example: 편안가구
      required:
        - name
    ProductSummaryOfSellerDTO:
      type: object
      properties:
        id:
          type: number
          description: '판매자 ID'
          example: 1
        name:
          type: string
          description: '판매자 이름'
          example: 홈퍼니처
      required:
        - name
    ProductSummaryDTO:
      type: object
      properties:
        id:
          type: number
          description: '상품 ID'
          example: 123
        name:
          type: string
          description: '상품 이름'
          example: '슈퍼 편안한 소파'
        slug:
          type: string
          description: 슬러그
          example: super-comfortable-sofa
        short_description:
          type: string
          description: '짧은 설명'
          example: '최고급 소재로 만든 편안한 소파'
        status:
          type: string
          description: 상태
          example: ACTIVE
        created_at:
          format: date-time
          type: string
          description: '생성 일시'
          example: '2025-04-10T09:30:00Z'
        base_price:
          type: number
          description: '기본 가격'
          example: 599000
        sale_price:
          type: number
          description: '할인 가격'
          example: 499000
        currency:
          type: string
          description: 통화
          example: KRW
        primary_image:
          description: '주 이미지'
          allOf:
            -
              $ref: '#/components/schemas/ProductSummaryOfImageDTO'
        brand:
          description: 브랜드
          allOf:
            -
              $ref: '#/components/schemas/ProductSummaryOfBrandDTO'
        seller:
          description: 판매자
          allOf:
            -
              $ref: '#/components/schemas/ProductSummaryOfSellerDTO'
        in_stock:
          type: boolean
          description: '재고 유무'
          example: true
        rating:
          type: number
          description: 평점
          example: 4.7
        review_count:
          type: number
          description: '리뷰 수'
          example: 128
      required:
        - id
        - name
        - slug
        - short_description
        - status
        - created_at
        - base_price
        - sale_price
        - currency
        - primary_image
        - brand
        - seller
        - in_stock
        - rating
        - review_count
    PaginationSummaryDTO:
      type: object
      properties:
        total_items:
          type: number
          description: '총 항목 수'
          example: 50
        total_pages:
          type: number
          description: '총 페이지 수'
          example: 5
        current_page:
          type: number
          description: '현재 페이지'
          example: 1
        per_page:
          type: number
          description: '페이지당 항목 수'
          example: 10
      required:
        - total_items
        - total_pages
        - current_page
        - per_page
    CategoryResponseBundleDTO:
      type: object
      properties:
        category:
          description: '카테고리 정보'
          allOf:
            -
              $ref: '#/components/schemas/CategoryResponseDTO'
        items:
          description: '상품 요약 목록'
          type: array
          items:
            $ref: '#/components/schemas/ProductSummaryDTO'
        pagination:
          description: '페이지네이션 정보'
          allOf:
            -
              $ref: '#/components/schemas/PaginationSummaryDTO'
      required:
        - category
        - items
        - pagination
    FeaturedCategoryDTO:
      type: object
      properties:
        id:
          type: number
          description: '카테고리 ID'
          example: 5
        name:
          type: string
          description: '카테고리 이름'
          example: 소파
        slug:
          type: string
          description: '카테고리 슬러그'
          example: sofa
        image_url:
          type: string
          description: '카테고리 이미지 URL'
          example: 'https://example.com/categories/sofa.jpg'
        product_count:
          type: number
          description: '제품 수'
          example: 85
      required:
        - id
        - name
        - slug
        - image_url
        - product_count
    MainResponseBundleDTO:
      type: object
      properties:
        new_products:
          description: '신상품 목록'
          type: array
          items:
            $ref: '#/components/schemas/ProductSummaryDTO'
        popular_products:
          description: '인기 상품 목록'
          type: array
          items:
            $ref: '#/components/schemas/ProductSummaryDTO'
        featured_categories:
          description: '추천 카테고리 목록'
          type: array
          items:
            $ref: '#/components/schemas/FeaturedCategoryDTO'
      required:
        - new_products
        - popular_products
        - featured_categories
    ProductResponseDTO:
      type: object
      properties:
        id:
          type: number
          description: '상품 ID'
          example: 123
        name:
          type: string
          description: '상품 이름'
          example: '슈퍼 편안한 소파'
        slug:
          type: string
          description: 슬러그
          example: super-comfortable-sofa
        created_at:
          format: date-time
          type: string
          description: '생성 일시'
          example: '2025-04-10T09:30:00Z'
        updated_at:
          format: date-time
          type: string
          description: '수정 일시'
          example: '2025-04-14T10:15:00Z'
      required:
        - id
        - name
        - slug
        - created_at
        - updated_at
    DimensionsDTO:
      type: object
      properties:
        width:
          type: number
          description: '가로 길이'
          example: 200
        height:
          type: number
          description: '세로 길이'
          example: 85
        depth:
          type: number
          description: 깊이
          example: 90
      required:
        - width
        - height
        - depth
    AdditionalInfoDTO:
      type: object
      properties:
        assembly_required:
          type: boolean
          description: '조립 필요 여부'
          example: true
        assembly_time:
          type: string
          description: '조립 시간'
          example: 30분
      required:
        - assembly_required
        - assembly_time
    ProductDetailDTO:
      type: object
      properties:
        weight:
          type: number
          description: 무게
          example: 25.5
        dimensions:
          description: '크기 정보'
          allOf:
            -
              $ref: '#/components/schemas/DimensionsDTO'
        materials:
          type: string
          description: 재료
          example: '가죽, 목재, 폼'
        country_of_origin:
          type: string
          description: 원산지
          example: 대한민국
        warranty_info:
          type: string
          description: '보증 정보'
          example: '2년 품질 보증'
        care_instructions:
          type: string
          description: '관리 지침'
          example: '마른 천으로 표면을 닦아주세요'
        additional_info:
          description: '추가 정보'
          allOf:
            -
              $ref: '#/components/schemas/AdditionalInfoDTO'
      required:
        - weight
        - dimensions
        - materials
        - country_of_origin
        - warranty_info
        - care_instructions
        - additional_info
    PriceForProductBodyDTO:
      type: object
      properties:
        base_price:
          type: number
          description: '기본 가격'
          example: 599000
        sale_price:
          type: number
          description: '할인 가격'
          example: 499000
        cost_price:
          type: number
          description: 원가
          example: 350000
        currency:
          type: string
          description: 통화
          example: KRW
        tax_rate:
          type: number
          description: 세율
          example: 10
      required:
        - base_price
        - sale_price
        - currency
        - tax_rate
    CategoryOfProductBodyDTO:
      type: object
      properties:
        category_id:
          type: number
          description: '카테고리 ID'
          example: 5
        is_primary:
          type: boolean
          description: '대표 카테고리 여부'
          example: true
      required:
        - category_id
        - is_primary
    ProductOptionDTO:
      type: object
      properties:
        id:
          type: number
          description: '옵션 ID'
          example: 1
        option_group_id:
          type: number
          description: '옵션 그룹 ID'
          example: 35
        name:
          type: string
          description: '옵션 이름'
          example: 브라운
        additional_price:
          type: number
          description: '추가 가격'
          example: 25000
        sku:
          type: string
          description: SKU
          example: SOFA-BRN
        stock:
          type: number
          description: 재고
          example: 10
        display_order:
          type: number
          description: '표시 순서'
          example: 1
      required:
        - option_group_id
        - name
        - additional_price
        - sku
        - stock
        - display_order
    ProductOptionGroupDTO:
      type: object
      properties:
        id:
          type: number
          description: '옵션 그룹 ID'
          example: 1
        name:
          type: string
          description: '옵션 그룹 이름'
          example: 색상
        display_order:
          type: number
          description: '표시 순서'
          example: 1
        options:
          description: '옵션 목록'
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionDTO'
      required:
        - name
        - display_order
        - options
    ImageDTO:
      type: object
      properties:
        id:
          type: number
          description: '이미지 ID'
          example: 1
        url:
          type: string
          description: '이미지 URL'
          example: 'https://example.com/images/sofa3.jpg'
        alt_text:
          type: string
          description: '이미지 대체 텍스트'
          example: '네이비 소파 측면'
        is_primary:
          type: boolean
          description: '대표 이미지 여부'
          example: false
        display_order:
          type: number
          description: '이미지 표시 순서'
          example: 3
        option_id:
          type: object
          description: '옵션 ID'
          example: 35
          nullable: true
      required:
        - url
        - alt_text
        - is_primary
        - display_order
        - option_id
    ProductBodyDTO:
      type: object
      properties:
        name:
          type: string
          description: '상품 이름'
          example: '슈퍼 편안한 소파'
        slug:
          type: string
          description: 슬러그
          example: super-comfortable-sofa
        short_description:
          type: string
          description: '짧은 설명'
          example: '최고급 소재로 만든 편안한 소파'
        full_description:
          type: string
          description: '상세 설명'
          example: '<p>이 소파는 최고급 소재로 제작되었으며...</p>'
        seller_id:
          type: number
          description: '판매자 ID'
          example: 1
        brand_id:
          type: number
          description: '브랜드 ID'
          example: 2
        status:
          type: string
          description: 상태
          example: ACTIVE
        detail:
          description: '상세 정보'
          allOf:
            -
              $ref: '#/components/schemas/ProductDetailDTO'
        price:
          description: '가격 정보'
          allOf:
            -
              $ref: '#/components/schemas/PriceForProductBodyDTO'
        categories:
          description: '카테고리 목록'
          type: array
          items:
            $ref: '#/components/schemas/CategoryOfProductBodyDTO'
        option_groups:
          description: '옵션 그룹 목록'
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionGroupDTO'
        images:
          description: '이미지 목록'
          type: array
          items:
            $ref: '#/components/schemas/ImageDTO'
        tags:
          description: '태그 목록'
          example:
            - 1
            - 4
            - 7
          type: array
          items:
            type: string
      required:
        - name
        - slug
        - short_description
        - full_description
        - seller_id
        - brand_id
        - status
        - detail
        - price
        - categories
        - option_groups
        - images
        - tags
    ProductResponseBundleDTO:
      type: object
      properties:
        items:
          description: '상품 정보'
          type: array
          items:
            $ref: '#/components/schemas/ProductSummaryDTO'
        pagination:
          description: '페이지네이션 정보'
          allOf:
            -
              $ref: '#/components/schemas/PaginationSummaryDTO'
      required:
        - items
        - pagination
    SellerDTO:
      type: object
      properties:
        id:
          type: number
          description: '판매자 ID'
          example: 1
        name:
          type: string
          description: '판매자 이름'
          example: 홈퍼니처
        description:
          type: string
          description: '판매자 설명'
          example: '최고의 가구 전문 판매점'
        logo_url:
          type: string
          description: '판매자 로고 URL'
          example: 'https://example.com/sellers/homefurniture.png'
        rating:
          type: number
          description: '판매자 평점'
          example: 4.8
        contact_email:
          type: string
          description: '판매자 연락 이메일'
          example: contact@homefurniture.com
        contact_phone:
          type: string
          description: '판매자 연락 전화번호'
          example: 02-1234-5678
      required:
        - name
        - description
        - logo_url
        - rating
        - contact_email
        - contact_phone
    BrandDTO:
      type: object
      properties:
        id:
          type: number
          description: '브랜드 ID'
          example: 1
        name:
          type: string
          description: '브랜드 이름'
          example: 편안가구
        description:
          type: string
          description: '브랜드 설명'
          example: '편안함을 추구하는 가구 브랜드'
        logo_url:
          type: string
          description: '브랜드 로고 URL'
          example: 'https://example.com/brands/comfortfurniture.png'
        website:
          type: string
          description: '브랜드 웹사이트'
          example: 'https://comfortfurniture.com'
      required:
        - name
        - description
        - logo_url
        - website
    ProductPriceDTO:
      type: object
      properties:
        base_price:
          type: number
          description: '기본 가격'
          example: 599000
        sale_price:
          type: number
          description: '할인 가격'
          example: 499000
        cost_price:
          type: number
          description: 원가
          example: 350000
        currency:
          type: string
          description: 통화
          example: KRW
        tax_rate:
          type: number
          description: 세율
          example: 10
        discount_percentage:
          type: number
          description: 할인율
          example: 17
      required:
        - base_price
        - sale_price
        - currency
        - tax_rate
        - discount_percentage
    CategoryDTO:
      type: object
      properties:
        id:
          type: number
          description: '카테고리 ID'
          example: 5
        name:
          type: string
          description: '카테고리 이름'
          example: 소파
        slug:
          type: string
          description: '카테고리 슬러그'
          example: sofa
        is_primary:
          type: boolean
          description: '대표 카테고리 여부'
          example: true
        description:
          type: string
          description: '카테고리 설명'
          example: '다양한 스타일의 소파'
        level:
          type: number
          description: '카테고리 레벨'
          example: 3
        image_url:
          type: string
          description: '카테고리 이미지 URL'
          example: 'https://example.com/categories/sofa.jpg'
        parent:
          description: '부모 카테고리'
          nullable: true
          allOf:
            -
              $ref: '#/components/schemas/ParentCategoryDTO'
      required:
        - id
        - name
        - slug
        - is_primary
        - description
        - level
        - image_url
    TagDTO:
      type: object
      properties:
        id:
          type: number
          description: '태그 ID'
          example: 1
        name:
          type: string
          description: '태그 이름'
          example: 편안함
        slug:
          type: string
          description: 슬러그
          example: comfort
      required:
        - id
        - name
        - slug
    RatingDTO:
      type: object
      properties:
        average:
          type: number
          description: '평균 평점'
          example: 4.5
        count:
          type: number
          description: '총 리뷰 수'
          example: 150
        distribution:
          type: object
          description: '별점 분포'
          example:
            '1': 2
            '2': 3
            '3': 15
            '4': 30
            '5': 100
      required:
        - average
        - count
        - distribution
    ProductCatalogDTO:
      type: object
      properties:
        id:
          type: number
          description: '상품 ID'
          example: 123
        name:
          type: string
          description: '상품 이름'
          example: '슈퍼 편안한 소파'
        slug:
          type: string
          description: 슬러그
          example: super-comfortable-sofa
        short_description:
          type: string
          description: '짧은 설명'
          example: '최고급 소재로 만든 편안한 소파'
        full_description:
          type: string
          description: '상세 설명'
          example: '<p>이 소파는 최고급 소재로 제작되었으며...</p>'
        status:
          type: string
          description: 상태
          example: ACTIVE
        created_at:
          format: date-time
          type: string
          description: '생성 일시'
          example: '2025-04-10T09:30:00Z'
        updated_at:
          format: date-time
          type: string
          description: '수정 일시'
          example: '2025-04-14T10:15:00Z'
        seller:
          description: '판매자 정보'
          allOf:
            -
              $ref: '#/components/schemas/SellerDTO'
        brand:
          description: '브랜드 정보'
          allOf:
            -
              $ref: '#/components/schemas/BrandDTO'
        detail:
          description: '상세 정보'
          allOf:
            -
              $ref: '#/components/schemas/ProductDetailDTO'
        price:
          description: '가격 정보'
          allOf:
            -
              $ref: '#/components/schemas/ProductPriceDTO'
        categories:
          description: '카테고리 목록'
          type: array
          items:
            $ref: '#/components/schemas/CategoryDTO'
        option_groups:
          description: '상품 옵션 그룹'
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionGroupDTO'
        images:
          description: '상품 이미지'
          type: array
          items:
            $ref: '#/components/schemas/ImageDTO'
        tags:
          description: '상품 태그'
          type: array
          items:
            $ref: '#/components/schemas/TagDTO'
        rating:
          description: '상품 평점'
          allOf:
            -
              $ref: '#/components/schemas/RatingDTO'
      required:
        - id
        - name
        - slug
        - short_description
        - full_description
        - status
        - created_at
        - updated_at
        - seller
        - brand
        - detail
        - price
        - categories
        - option_groups
        - images
        - tags
        - rating
    UserDTO:
      type: object
      properties:
        id:
          type: number
          description: '사용자 ID'
          example: 250
        name:
          type: string
          description: '사용자 이름'
          example: 홍길동
        avatar_url:
          type: string
          description: '사용자 아바타 URL'
          example: 'https://example.com/avatars/user250.jpg'
      required:
        - id
        - name
        - avatar_url
    ReviewDTO:
      type: object
      properties:
        id:
          type: number
          description: '리뷰 ID'
          example: 1500
        user:
          description: '리뷰 작성자'
          allOf:
            -
              $ref: '#/components/schemas/UserDTO'
        rating:
          type: number
          description: 평점
          example: 5
        title:
          type: string
          description: '리뷰 제목'
          example: '완벽한 소파입니다!'
        content:
          type: string
          description: '리뷰 내용'
          example: '배송도 빠르고 품질도 매우 좋습니다. 색상도 사진과 동일하고 조립도 쉬웠어요.'
        created_at:
          format: date-time
          type: string
          description: '생성 일시'
          example: '2025-04-12T15:30:00Z'
        updated_at:
          format: date-time
          type: string
          description: '수정 일시'
          example: '2025-04-12T15:30:00Z'
        verified_purchase:
          type: boolean
          description: '구매 여부'
          example: true
        helpful_votes:
          type: number
          description: '유용한 리뷰 점수'
          example: 12
      required:
        - id
        - user
        - rating
        - title
        - content
        - created_at
        - updated_at
        - verified_purchase
        - helpful_votes
    ReviewSummaryDTO:
      type: object
      properties:
        average_rating:
          type: number
          description: '리뷰 평균 평점'
          example: 4.5
        total_count:
          type: number
          description: '리뷰 개수'
          example: 100
        distribution:
          type: object
          description: '리뷰 평점 분포'
          example:
            '1': 10
            '2': 20
            '3': 30
            '4': 25
            '5': 15
      required:
        - average_rating
        - total_count
        - distribution
    ReviewResponseBundleDTO:
      type: object
      properties:
        items:
          description: '리뷰 목록'
          type: array
          items:
            $ref: '#/components/schemas/ReviewDTO'
        summary:
          description: '리뷰 요약 정보'
          allOf:
            -
              $ref: '#/components/schemas/ReviewSummaryDTO'
        pagination:
          description: '페이지네이션 정보'
          allOf:
            -
              $ref: '#/components/schemas/PaginationSummaryDTO'
      required:
        - items
        - summary
        - pagination
    ReviewBodyDTO:
      type: object
      properties:
        rating:
          type: number
          description: 평점
          example: 5
        title:
          type: string
          description: 제목
          example: '완벽한 소파입니다!'
        content:
          type: string
          description: 내용
          example: '배송도 빠르고 품질도 매우 좋습니다. 색상도 사진과 동일하고 조립도 쉬웠어요.'
      required:
        - rating
        - title
        - content
    ReviewResponseDTO:
      type: object
      properties:
        id:
          type: number
          description: '리뷰 ID'
          example: 1500
        rating:
          type: number
          description: 평점
          example: 5
        title:
          type: string
          description: '리뷰 제목'
          example: '완벽한 소파입니다!'
        content:
          type: string
          description: '리뷰 내용'
          example: '배송도 빠르고 품질도 매우 좋습니다. 색상도 사진과 동일하고 조립도 쉬웠어요.'
        updated_at:
          format: date-time
          type: string
          description: '수정 일시'
          example: '2025-04-12T15:30:00Z'
      required:
        - id
        - rating
        - title
        - content
        - updated_at
