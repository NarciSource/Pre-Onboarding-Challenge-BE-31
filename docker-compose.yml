version: "3.8"

services:
  rds:
    image: postgres:latest
    container_name: rds
    networks:
      - network
    ports:
      - "${PG_PORT}:5432"
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes:
      - ./data:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql/data
    # Debezium CDC를 위한 설정 추가
    command: # postgresql.conf의 설정을 덮어쓰기
      - "postgres"
      - "-c"
      - "wal_level=logical" # Debezium이 이벤트를 캡처할 수 있도록
      - "-c"
      - "max_wal_senders=10" # 복제 클라이언트 수
      - "-c"
      - "max_replication_slots=10" # Debezium이 슬롯을 만들 수 있게

  mongo:
    image: mongo:latest
    container_name: mongo
    networks:
      - network
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITPG_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db

  server:
    depends_on:
      - rds
    image: e-commerce-server:${VERSION}
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - network
    ports:
      - "${PORT}:3000"
    env_file:
      - .env
    environment:
      - PG_HOST=rds
      - PG_PORT=5432
      - MONGO_HOST=mongo
      - MONGO_PORT=27017

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - network
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092 # Kafka 내부에서 사용하는 바인딩 주소
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 # Kafka 외부에서 사용하는 바인딩 주소
      KAFKA_NODE_ID: 1 # KRaft 모드에서 브로커ID & 컨트롤러ID 역할
      KAFKA_PROCESS_ROLES: broker,controller # broker와 controller 역할을 모두 수행 (KRaft 모드)
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093 # KRaft 모드에서 controller quorum voter 설정
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true" # 자동으로 topic을 생성
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka-data:/var/lib/kafka/data

networks:
  network:
    driver: bridge

volumes:
  pg-data:
    driver: local
  mongo-data:
    driver: local
  kafka-data:
    driver: local
